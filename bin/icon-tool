#!/bin/sh -e
##:
#h: Usage: icon-tool ...
#h:
#h: Icon and logo check and transformation tool.
#h:
#h: ... get-size [FILE|SIZE] : Get size, list sizes.
#h: ... android-app  ...     : Android app operations.
##:
icon_tool() {
    local cmd="$1"
    shift
    case "${cmd}" in
        get-size)    icon_tool_get_size "$@"                       ;;
        android-app) icon_tool_android_app "$@"                    ;;
        *)           icon_tool_error "Invalid subcommand: ${cmd}." ;;
    esac
}
icon_tool_check_programs() {
    if which "convert" >/dev/null 2>&1;then
        icon_tool_error "Can't find ImageMagick's convert command."
        return 1
    fi
    if which "identify" >/dev/null 2>&1;then
        icon_tool_error "Can't find ImageMagick's identify command."
        return 1
    fi
}



## -------------------
## ---- KNOWLEDGE ----
## -------------------
icon_tool_get_size() { # NAME
    case "${1}" in
        '')     cat <<-EOF
		xxxhdpi xxhdpi xhdpi hdpi mdpi
		EOF
                ;;
        xxxhdpi) echo "192x192";;
        xxhdpi)  echo "144x144";;
        xhdpi)   echo "96x96"  ;;
        hdpi)    echo "72x72"  ;;
        mdpi)    echo "42x42"  ;;
        *.png)   identify -format '%wx%h\n' "${1}";;
        *x*)     echo "${1}"   ;;
        *)       icon_tool_error "Invalid size: ${1}"; return 1;;
    esac
}


## ---------------------
## ---- ANDROID APP ----
## ---------------------
icon_tool_android_app() {
    local cmd="$1"
    if test ! -n "${cmd}";then
        cat <<-EOF >&2
	... set-icon round|square DIRECTORY [ICON] : Set icon of project.
	... play-icon IMAGE                        : Create IMAGE-512x512.png
	EOF
        return 1
    fi
    shift
    case "${cmd}" in
        set-icon)  icon_tool_android_app_set_icon  "$@"                 ;;
        play-icon) icon_tool_android_app_play_icon "$@"                 ;;
        *)         icon_tool_error "Invalid argument: ${cmd}."; return 1;;
    esac
}
icon_tool_android_app_set_icon() { # MODE DIR [ICON]
    local mode="$1" dir="$2" icon="$3" file=
    ## Check parameters.
    case "${mode}" in
        '')     icon_tool_error "Missing mode: round|square."; return 1;;
        round)  local regex='.*/mipmap-[^/]*/ic_launcher_round.png'    ;;
        square) local regex='.*/mipmap-[^/]*/ic_launcher.png'   ;;
        *)      icon_tool_error "Invalid mode: ${cmd}.";       return 1;;
    esac
    case "${dir}" in
        '')     icon_tool_error "Please specify a directory."; return 1;;
    esac
    ## Search for files.
    if test ! -d "${dir}";then
        icon_tool_error "Directory '${dir}' does not exist."
        return 1
    fi
    local files="`find "${dir}" -type f -iregex "${regex}"`"
    ## Print files.
    if test ! -n "${icon}";then
        printf '%s\n' "${files}"
        return 0
    fi
    ## Replace.
    if test ! -f "${icon}";then
        icon_tool_error "File '${icon}' does not exist."
        return 1
    fi
    printf '%s\n' "${files}" | while read -r line;do
        if test ! -n "${line}";then continue;fi
        local size="`icon_tool_get_size "${line}"`"
        if test ! -n "${size}";then continue;fi
        echo "${line}"
        convert "${icon}" -quiet -resize "${size}" "${line}"
    done
}
icon_tool_android_app_play_icon() {
    local f='' t=''
    for f in "$@"; do
        t="`echo "${f}" | sed 's|\.[^\.]*$|-512x512.png|'`"
        echo "G ${t}" >&2
        convert "${f}" -quiet -resize "512x512!" "${t}"
    done
}
## -------------------------------------------------------------------
icon_tool_error() { echo >&2 "error: $*"; }
if test @"$(basename "$0")" = @"icon-tool";then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0" ;;
        *)            icon_tool "$@"; exit 0;;
    esac
fi
